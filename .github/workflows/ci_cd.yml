name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

#       - name: Replace secret
#         uses: cschleiden/replace-tokens@v1
#         with:
#           tokenPrefix: '{'
#           tokenSuffix: '}'
#           files: 'src/environments/environment.prod.ts'
#         env:
#           SECRET_API_KEY: ${{ secrets.API_KEY}}

      - name: Generate build
        run: npm run build:prod

      - name: Run tests
        run: npm run test:prod

      - name: Upload artifact_dist
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: artifact_dist
          path: dist

  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact_dist
        if: success()
        uses: actions/download-artifact@v3
        with:
          name: artifact_dist
          path: dist

      - name: Docker login
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push docker image
        uses: docker/build-push-action@v3.1.1
        with:
          push: true
          tags: |
            techfring/pdi-01:${{ github.run_number }}
            techfring/pdi-01:latest

  deploy:
    needs:
      - build
      - push
    runs-on: ubuntu-latest
    steps:
      - name: Install vercel cli
        run: npm install --global vercel@latest
      
      - name: Pull vercel environment information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build project artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy project artifacts to vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

#       - name: Deploy to GitHub Pages
#         uses: crazy-max/ghaction-github-pages@v3
#         with:
#           target_branch: gh-pages
#           build_dir: dist/weather-app
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
